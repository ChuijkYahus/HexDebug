name: Run CI/CD pipeline

on:
  push:
    branches: "*"
  workflow_dispatch:
    inputs:
      publish-mod:
        description: Publish the mod
        type: boolean
        default: false
      publish-docs:
        description: Publish the web book
        type: boolean
        default: false

env:
  PYPI_PACKAGE: hexdoc-hexdebug

permissions:
  contents: read

jobs:
  build-mod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: gradle/actions/setup-gradle@v3

      - name: Build mod
        run: ./gradlew build

      # literally no idea why the mkdir is needed, but the workflow fails without it :/
      - name: Check if datagen needs to be run
        timeout-minutes: 3
        run: |
          mkdir -p /home/runner/.gradle/caches/fabric-loom/assets
          ./gradlew runAllDatagen
          git add --intent-to-add .
          git diff --name-only --exit-code -- ":!:*/src/generated/resources/.cache/*"

      - name: Prepare build artifact
        run: |
          mkdir dist
          cp {Common,Fabric,Forge}/build/libs/*.jar dist

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: mod-build
          path: dist/
          if-no-files-found: error

  build-docs:
    uses: hexdoc-dev/hexdoc/.github/workflows/hexdoc.yml@v1!0.1.dev
    permissions:
      contents: write
      pages: read
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      python-version: 3.11
      deploy-pages: |
        ${{
          (github.head_ref || github.ref_name) == 'main'
          || inputs.publish-docs == 'true'
        }}
      release: ${{ inputs.publish-docs }}

  publish-mod:
    runs-on: ubuntu-latest
    needs: [build-mod, build-docs]
    if: inputs.publish-mod == 'true'
    environment:
      name: curseforge-modrinth
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: mod-build
          path: dist
      # TODO: implement

  publish-docs:
    runs-on: ubuntu-latest
    needs: [build-mod, build-docs]
    if: inputs.publish-docs == 'true'
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PYPI_PACKAGE }}
    permissions:
      id-token: write
    steps:
      # hexdoc workflow uses v3, so we can't use v4 here
      - uses: actions/download-artifact@v3
        with:
          name: hexdoc-build
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
